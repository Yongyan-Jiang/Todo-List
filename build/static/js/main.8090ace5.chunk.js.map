{"version":3,"sources":["TodoInput.js","TodoItem.js","leanCloud.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","react_default","a","createElement","type","value","this","props","content","className","onChange","changeTitle","bind","onKeyPress","submit","e","key","onSubmit","Component","TodoItem","checked","todo","status","toggle","title","onClick","delete","onToggle","onDelete","AV","init","appId","appKey","getCurrentUser","user","User","current","getUserFromAVUser","AVUser","Object","objectSpread","id","attributes","UserDialog","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selected","selectedTab","formData","email","username","password","setState","target","_this2","preventDefault","_this$state$formData","successFn","errorFn","setUsername","setPassword","setEmail","signUp","then","loginedUser","error","onSignUp","code","alert","_this3","_this$state$formData2","logIn","signIn","onSignIn","stateCopy","JSON","parse","stringify","signUpForm","changeFormData","signInForm","href","showForgotPassword","signInOrSignUp","switch","forgotPassword","resetPassword","returnToSignIn","requestPasswordReset","success","App","newTodo","todoList","todos","filter","item","deleted","map","index","TodoItem_TodoItem","signOut","TodoInput_TodoInput","addTodo","UserDialog_UserDialog","onSignUpOrSignIn","logOut","event","push","idMaker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8090ace5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TodoInput.css'\r\n\r\nexport default class TodoInput extends Component {\r\n  render(){\r\n    return <input type=\"text\" value={this.props.content}\r\n      className=\"TodoInput\"\r\n      onChange={this.changeTitle.bind(this)}\r\n      onKeyPress={this.submit.bind(this)}/>//不加.bind(this)会报错\r\n  }\r\n  submit(e){\r\n    if (e.key === 'Enter') {\r\n      this.props.onSubmit(e)\r\n    }\r\n  }\r\n  changeTitle(e){\r\n    this.props.onChange(e)\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport './TodoItem.css'\r\n\r\nexport default class TodoItem extends Component {\r\n  render(){\r\n    return (\r\n      <div className=\"TodoItem\">\r\n        <input type=\"checkbox\" checked={this.props.todo.status === 'completed'}\r\n          onChange={this.toggle.bind(this)}/> \r\n        <span className=\"title\">{this.props.todo.title}</span>\r\n        <button onClick={this.delete.bind(this)}>删除</button>\r\n      </div>\r\n    )\r\n  }\r\n  toggle(e){\r\n    this.props.onToggle(e, this.props.todo)\r\n  }\r\n  delete(e){\r\n    this.props.onDelete(e, this.props.todo)\r\n  }\r\n}","import AV from 'leancloud-storage'\r\n\r\nvar APP_ID = 'z5kYOKNdDW7zKVc8N92lfOw7-gzGzoHsz'\r\nvar APP_KEY = 'r5P1kesCadRcUsjGBOXL8pXe'\r\nAV.init({\r\n  appId: APP_ID,\r\n  appKey: APP_KEY\r\n})\r\n\r\nexport default AV\r\n\r\nexport function signUp(email, username, password, successFn, errorFn){\r\n  // 新建 AVUser 对象实例\r\n  var user = new AV.User()\r\n  // 设置用户名\r\n  user.setUsername(username)\r\n  // 设置密码\r\n  user.setPassword(password)\r\n  // 设置邮箱\r\n  user.setEmail(email)\r\n\r\n  user.signUp().then(function (loginedUser) {\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null, user)\r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n  return undefined\r\n}\r\n\r\nexport function signIn(username, password, successFn, errorFn){\r\n  AV.User.logIn(username, password).then(function (loginedUser) {\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null, user)\r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n}\r\n\r\nexport function getCurrentUser(){\r\n  let user = AV.User.current()\r\n  if(user){\r\n    return getUserFromAVUser(user)\r\n  }else{\r\n    return null\r\n  }\r\n}\r\n\r\nexport function signOut(){\r\n  AV.User.logOut()\r\n  return undefined\r\n}\r\n\r\nexport function sendPasswordResetEmail(email, successFn, errorFn){\r\n  AV.User.requestPasswordReset(email).then(function (success) {\r\n    successFn.call() \r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n}\r\n\r\nfunction getUserFromAVUser(AVUser){\r\n  return {\r\n    id: AVUser.id,\r\n    ...AVUser.attributes\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './UserDialog.css'\r\nimport {signUp, signIn, sendPasswordResetEmail} from './leanCloud'\r\n\r\nexport default class UserDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      selected: 'signUp', // 'signIn'\r\n      selectedTab: 'signInOrSignUp', // 'forgotPassword'\r\n      formData: {\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n      }\r\n    }\r\n  }\r\n  switch(e){\r\n    this.setState({\r\n      selected: e.target.value\r\n    })\r\n  }\r\n\r\n  signUp(e){\r\n    e.preventDefault()\r\n    let {email,username, password} = this.state.formData\r\n    let success = (user)=>{\r\n      this.props.onSignUp.call(null, user)\r\n    }\r\n    let error = (error)=>{\r\n      switch(error.code){\r\n        case 202:\r\n          alert('用户名已被占用')\r\n          break\r\n        default:\r\n          alert(error)\r\n          break\r\n      }\r\n    }\r\n    signUp(email,username, password, success, error)\r\n  }\r\n  signIn(e){\r\n    e.preventDefault()\r\n    let {username, password} = this.state.formData\r\n    let success = (user)=>{\r\n      this.props.onSignIn.call(null, user)\r\n    }\r\n    let error = (error)=>{\r\n      switch(error.code){\r\n        case 210:\r\n          alert('用户名与密码不匹配')\r\n          break\r\n        default:\r\n          alert(error)\r\n          break\r\n      }\r\n    }\r\n    signIn(username, password, success, error)\r\n  }\r\n\r\n  changeFormData(key,e){\r\n    let stateCopy = JSON.parse(JSON.stringify(this.state)) //用JSON深拷贝\r\n    stateCopy.formData[key] = e.target.value\r\n    this.setState(stateCopy)\r\n  }\r\n\r\n  render(){\r\n    let signUpForm = (\r\n      <form className=\"signUp\" onSubmit={this.signUp.bind(this)}> {/* 注册*/}\r\n        <div className=\"row\">\r\n          <label>邮箱</label> \r\n          <input type=\"text\" value={this.state.formData.email}\r\n            onChange={this.changeFormData.bind(this, 'email')}/>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label>用户名</label> \r\n          <input type=\"text\" value={this.state.formData.username} \r\n            onChange={this.changeFormData.bind(this, 'username')}/>\r\n          {/* bind 不仅可以绑定 this，还可以绑定第一个参数 */}\r\n        </div>\r\n        <div className=\"row\">\r\n          <label>密码</label>\r\n          <input type=\"password\" value={this.state.formData.password} \r\n            onChange={this.changeFormData.bind(this, 'password')}/>\r\n        </div>\r\n        <div className=\"row actions\">\r\n          <button type=\"submit\">注册</button>\r\n        </div>\r\n      </form>\r\n    )\r\n    let signInForm = (\r\n      <form className=\"signIn\" onSubmit={this.signIn.bind(this)}> {/* 登录*/}\r\n        <div className=\"row\">\r\n          <label>用户名</label>\r\n          <input type=\"text\" value={this.state.formData.username} \r\n            onChange={this.changeFormData.bind(this, 'username')}/>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label>密码</label>\r\n          <input type=\"password\" value={this.state.formData.password} \r\n            onChange={this.changeFormData.bind(this, 'password')}/>\r\n        </div>\r\n        <div className=\"row actions\">\r\n          <button type=\"submit\">登录</button>\r\n          <a href=\"#\" onClick={this.showForgotPassword.bind(this)}>忘记密码了？</a>\r\n        </div>\r\n      </form>\r\n    ) \r\n    let signInOrSignUp = (\r\n      <div className=\"signInOrSignUp\">\r\n        <nav>\r\n          <label>\r\n            <input type=\"radio\" value=\"signUp\" \r\n              checked={this.state.selected === 'signUp'}\r\n              onChange={this.switch.bind(this)}\r\n            /> 注册</label>\r\n          <label>\r\n            <input type=\"radio\" value=\"signIn\" \r\n              checked={this.state.selected === 'signIn'}\r\n              onChange={this.switch.bind(this)}\r\n            /> 登录</label>\r\n        </nav>\r\n        <div className=\"panes\">\r\n          {this.state.selected === 'signUp' ? signUpForm : null}\r\n          {this.state.selected === 'signIn' ? signInForm : null}\r\n        </div>\r\n      </div>\r\n    )\r\n    let forgotPassword = (\r\n      <div className=\"forgotPassword\">\r\n        <h3>\r\n          重置密码\r\n        </h3>\r\n        <form className=\"forgotPassword\" onSubmit={this.resetPassword.bind(this)}> {/* 登录*/}\r\n          <div className=\"row\">\r\n            <label>邮箱</label>\r\n            <input type=\"text\" value={this.state.formData.email}\r\n              onChange={this.changeFormData.bind(this, 'email')}/>\r\n          </div>\r\n          <div className=\"row actions\">\r\n            <button type=\"submit\">发送重置邮件</button>\r\n            <a href=\"#\" onClick={this.returnToSignIn.bind(this)}>返回登录</a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n    return (\r\n      <div className=\"UserDialog-Wrapper\">\r\n        <div className=\"UserDialog\">\r\n          {this.state.selectedTab === 'signInOrSignUp' ? signInOrSignUp : forgotPassword}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  showForgotPassword(){\r\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n    stateCopy.selectedTab = 'forgotPassword'\r\n    this.setState(stateCopy)\r\n  }\r\n  returnToSignIn(){\r\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n    stateCopy.selectedTab = 'signInOrSignUp'\r\n    this.setState(stateCopy)\r\n  }\r\n  resetPassword(e){\r\n    e.preventDefault()\r\n    sendPasswordResetEmail(this.state.formData.email) \r\n  }\r\n}","import React, { Component } from 'react';\nimport 'normalize.css'\nimport './reset.css'\nimport './App.css';\nimport TodoInput from './TodoInput'\nimport TodoItem from './TodoItem'\nimport UserDialog from './UserDialog'\nimport {getCurrentUser, signOut} from './leanCloud'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: getCurrentUser() || {},\n      newTodo: 'test',\n      todoList: []\n    }\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item)=> !item.deleted)\n      .map((item,index)=>{\n      return ( //必须要有括号\n        <li key = 'index'>\n          <TodoItem todo={item} onToggle={this.toggle.bind(this)} \n            onDelete={this.delete.bind(this)}/>\n        </li>\n      )\n    })\n    \n\n    return (\n      <div className=\"App\">\n        <h1>{this.state.user.username||'我'}的待办\n          {this.state.user.id ? <button onClick={this.signOut.bind(this)}>登出</button> : null}\n        </h1>\n        <div className=\"inputWrapper\">\n          <TodoInput content={this.state.newTodo} \n            onChange={this.changeTitle.bind(this)}\n            onSubmit={this.addTodo.bind(this)} />\n        </div>\n        <ol className = 'todoList'>\n          {todos}\n        </ol>\n        {this.state.user.id ? \n          null : \n          <UserDialog \n            onSignUp={this.onSignUpOrSignIn.bind(this)} \n            onSignIn={this.onSignUpOrSignIn.bind(this)}/>}\n      </div>\n    )\n  }\n\n  signOut(){\n    signOut()\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = {}\n    this.setState(stateCopy)\n  }\n\n  onSignUpOrSignIn(user){\n    let stateCopy = JSON.parse(JSON.stringify(this.state)) \n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n  componentDidUpdate(){\n    \n  }\n\n  toggle(e, todo){\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state) \n  }\n\n  changeTitle(event){\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n\n  addTodo(event){\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n  delete(event, todo){\n    todo.deleted = true\n    this.setState(this.state) \n  }\n}\n\nexport default App;\n\nlet id = 0\n\nfunction idMaker(){\n  id += 1\n  return id\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}