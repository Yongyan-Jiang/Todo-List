{"version":3,"sources":["TodoInput.js","TodoItem.js","leanCloud.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","react_default","a","createElement","type","value","this","props","content","className","onChange","changeTitle","bind","onKeyPress","submit","e","key","onSubmit","Component","TodoItem","checked","todo","status","toggle","title","onClick","delete","onToggle","onDelete","AV","init","appId","appKey","signUp","username","password","successFn","errorFn","user","User","setUsername","setPassword","then","loginedUser","AVUser","Object","objectSpread","id","attributes","call","error","UserDialog","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","selected","formData","setState","target","_this2","preventDefault","_this$state$formData","onSignUp","console","log","stateCopy","JSON","parse","stringify","signUpForm","changeFormData","signInForm","signIn","switch","App","newTodo","todoList","todos","filter","item","deleted","map","index","TodoItem_TodoItem","TodoInput_TodoInput","addTodo","UserDialog_UserDialog","event","push","idMaker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6f2f50bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TodoInput.css'\r\n\r\nexport default class TodoInput extends Component {\r\n  render(){\r\n    return <input type=\"text\" value={this.props.content}\r\n      className=\"TodoInput\"\r\n      onChange={this.changeTitle.bind(this)}\r\n      onKeyPress={this.submit.bind(this)}/>//不加.bind(this)会报错\r\n  }\r\n  submit(e){\r\n    if (e.key === 'Enter') {\r\n      this.props.onSubmit(e)\r\n    }\r\n  }\r\n  changeTitle(e){\r\n    this.props.onChange(e)\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport './TodoItem.css'\r\n\r\nexport default class TodoItem extends Component {\r\n  render(){\r\n    return (\r\n      <div className=\"TodoItem\">\r\n        <input type=\"checkbox\" checked={this.props.todo.status === 'completed'}\r\n          onChange={this.toggle.bind(this)}/> \r\n        <span className=\"title\">{this.props.todo.title}</span>\r\n        <button onClick={this.delete.bind(this)}>删除</button>\r\n      </div>\r\n    )\r\n  }\r\n  toggle(e){\r\n    this.props.onToggle(e, this.props.todo)\r\n  }\r\n  delete(e){\r\n    this.props.onDelete(e, this.props.todo)\r\n  }\r\n}","import AV from 'leancloud-storage'\r\n\r\nvar APP_ID = 'z5kYOKNdDW7zKVc8N92lfOw7-gzGzoHsz'\r\nvar APP_KEY = 'r5P1kesCadRcUsjGBOXL8pXe'\r\nAV.init({\r\n  appId: APP_ID,\r\n  appKey: APP_KEY\r\n})\r\n\r\nexport default AV\r\n\r\nexport function signUp(username, password, successFn, errorFn){\r\n  // 新建 AVUser 对象实例\r\n  var user = new AV.User()\r\n  // 设置用户名\r\n  user.setUsername(username)\r\n  // 设置密码\r\n  user.setPassword(password)\r\n  // 设置邮箱\r\n  user.signUp().then(function (loginedUser) {\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null, user)\r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n  return undefined\r\n}\r\n\r\nfunction getUserFromAVUser(AVUser){\r\n  return {\r\n    id: AVUser.id,\r\n    ...AVUser.attributes\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './UserDialog.css'\r\nimport {signUp} from './leanCloud'\r\n\r\nexport default class UserDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      selected: 'signUp',\r\n      formData: {\r\n        username: '',\r\n        password: '',\r\n      }\r\n    }\r\n  }\r\n  switch(e){\r\n    this.setState({\r\n      selected: e.target.value\r\n    })\r\n  }\r\n\r\n  signUp(e){\r\n    e.preventDefault()\r\n    let {username, password} = this.state.formData\r\n    let success = (user)=>{\r\n      this.props.onSignUp.call(null, user)\r\n    }\r\n    let error = (error)=>{\r\n      console.log(error)\r\n    }\r\n    signUp(username, password, success, error)\r\n  }\r\n  signIn(e){}\r\n\r\n  changeFormData(key,e){\r\n    let stateCopy = JSON.parse(JSON.stringify(this.state)) //用JSON深拷贝\r\n    stateCopy.formData[key] = e.target.value\r\n    this.setState(stateCopy)\r\n  }\r\n\r\n  render(){\r\n    let signUpForm = (\r\n      <form className=\"signUp\" onSubmit={this.signUp.bind(this)}> {/* 注册*/}\r\n        <div className=\"row\">\r\n          <label>用户名</label> \r\n          <input type=\"text\" value={this.state.formData.username} \r\n            onChange={this.changeFormData.bind(this, 'username')}/>\r\n          {/* bind 不仅可以绑定 this，还可以绑定第一个参数 */}\r\n        </div>\r\n        <div className=\"row\">\r\n          <label>密码</label>\r\n          <input type=\"password\" value={this.state.formData.password} \r\n            onChange={this.changeFormData.bind(this, 'password')}/>\r\n        </div>\r\n        <div className=\"row actions\">\r\n          <button type=\"submit\">注册</button>\r\n        </div>\r\n      </form>\r\n    )\r\n    let signInForm = (\r\n      <form className=\"signIn\" onSubmit={this.signIn.bind(this)}> {/* 登录*/}\r\n        <div className=\"row\">\r\n          <label>用户名</label>\r\n          <input type=\"text\" value={this.state.formData.username} \r\n            onChange={this.changeFormData.bind(this, 'username')}/>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label>密码</label>\r\n          <input type=\"password\" value={this.state.formData.password} \r\n            onChange={this.changeFormData.bind(this, 'password')}/>\r\n        </div>\r\n        <div className=\"row actions\">\r\n          <button type=\"submit\">登录</button>\r\n        </div>\r\n      </form>\r\n    ) \r\n    return (\r\n      <div className=\"UserDialog-Wrapper\">\r\n        <div className=\"UserDialog\">\r\n          <nav onChange={this.switch.bind(this)}>\r\n            <label><input type=\"radio\" value=\"signUp\" checked={this.state.selected === 'signUp'}/> 注册</label>\r\n            <label><input type=\"radio\" value=\"signIn\" checked={this.state.selected === 'signIn'}/> 登录</label>\r\n          </nav>\r\n          <div className=\"panes\">\r\n            {this.state.selected === 'signUp' ? signUpForm : null}\r\n            {this.state.selected === 'signIn' ? signInForm : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport 'normalize.css'\nimport './reset.css'\nimport './App.css';\nimport TodoInput from './TodoInput'\nimport TodoItem from './TodoItem'\nimport UserDialog from './UserDialog'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: {},\n      newTodo: 'test',\n      todoList: []\n    }\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item)=> !item.deleted)\n      .map((item,index)=>{\n      return ( //必须要有括号\n        <li key = 'index'>\n          <TodoItem todo={item} onToggle={this.toggle.bind(this)} \n            onDelete={this.delete.bind(this)}/>\n        </li>\n      )\n    })\n    \n\n    return (\n      <div className=\"App\">\n        <h1>{this.state.user.username||'我'}的待办</h1>\n        <div className=\"inputWrapper\">\n          <TodoInput content={this.state.newTodo} \n            onChange={this.changeTitle.bind(this)}\n            onSubmit={this.addTodo.bind(this)} />\n        </div>\n        <ol className = 'todoList'>\n          {todos}\n        </ol>\n        <UserDialog onSignUp={this.onSignUp.bind(this)}/>\n      </div>\n    )\n  }\n  onSignUp(user){\n    let stateCopy = JSON.parse(JSON.stringify(this.state)) \n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n  componentDidUpdate(){\n    \n  }\n\n  toggle(e, todo){\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state) \n  }\n\n  changeTitle(event){\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n\n  addTodo(event){\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n  delete(event, todo){\n    todo.deleted = true\n    this.setState(this.state) \n  }\n}\n\nexport default App;\n\nlet id = 0\n\nfunction idMaker(){\n  id += 1\n  return id\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}